apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "harbor.adminserver" . }}"
  labels:
{{ include "harbor.labels" . | indent 4 }}
    component: adminserver
data:
  DATABASE_TYPE: "postgresql"
  POSTGRESQL_HOST: "{{ template "harbor.database.host" . }}"
  POSTGRESQL_PORT: "{{ template "harbor.database.port" . }}"
  POSTGRESQL_USERNAME: "{{ template "harbor.database.username" . }}"
  POSTGRESQL_DATABASE: "{{ template "harbor.database.coreDatabase" . }}"
  POSTGRESQL_SSLMODE: "{{ template "harbor.database.sslmode" . }}"
  EXT_ENDPOINT: "{{ .Values.externalURL }}"
  CORE_URL: "http://{{ template "harbor.core" . }}"
  JOBSERVICE_URL: "http://{{ template "harbor.fullname" . }}-jobservice"
  REGISTRY_URL: "http://{{ template "harbor.registry" . }}:5000"
  TOKEN_SERVICE_URL: "http://{{ template "harbor.core" . }}/service/token"
  WITH_NOTARY: "{{ .Values.notary.enabled }}"
  NOTARY_URL: "http://{{ template "harbor.notary-server" . }}:4443"
  LOG_LEVEL: "{{ .Values.logLevel }}"
  IMAGE_STORE_PATH: "/" # This is a temporary hack.
  CFG_EXPIRATION: "5"
  ADMIRAL_URL: "NA"
  RESET: "false"
  WITH_CLAIR: "{{ .Values.clair.enabled }}"
  CLAIR_DB_HOST: "{{ template "harbor.database.host" . }}"
  CLAIR_DB_PORT: "{{ template "harbor.database.port" . }}"
  CLAIR_DB_USERNAME: "{{ template "harbor.database.username" . }}"
  CLAIR_DB: "{{ template "harbor.database.clairDatabase" . }}"
  CLAIR_URL: "http://{{ template "harbor.fullname" . }}-clair:6060"
  CLAIR_DB_SSLMODE: "{{ template "harbor.database.sslmode" . }}"
  UAA_ENDPOINT: ""
  UAA_CLIENTID: ""
  UAA_CLIENTSECRET: ""
  UAA_VERIFY_CERT: "True"
  REGISTRY_STORAGE_PROVIDER_NAME: "{{ .Values.persistence.imageChartStorage.type }}"
  WITH_CHARTMUSEUM: "{{ .Values.chartmuseum.enabled }}"
  CHART_REPOSITORY_URL: "http://{{ template "harbor.chartmuseum" . }}"
  # The following properties have no default value in Harbor core if not 
  # set via env. They should be removed after the refactoring:
  # AUTH_MODE, SELF_REGISTRATION, PROJECT_CREATION_RESTRICTION 
  AUTH_MODE: "{{ .Values.auth.mode }}"
  LDAP_URL: "{{ .Values.auth.ldap.ldap_url }}"
  LDAP_SEARCHDN: {{ .Values.auth.ldap.ldap_searchdn }}
  LDAP_SEARCH_PWD: "{{ .Values.auth.ldap.ldap_search_pwd }}"
  LDAP_BASEDN: "{{ .Values.auth.ldap.ldap_basedn}}"
  LDAP_FILTER: "{{ .Values.auth.ldap.ldap_filter}}"
  LDAP_UID: "{{ .Values.auth.ldap.ldap_uid }}"
  LDAP_SCOPE: "{{ .Values.auth.ldap.ldap_scope }}"
  LDAP_TIMEOUT: "{{ .Values.auth.ldap.ldap_timeout }}"
  LDAP_VERIFY_CERT: "{{ .Values.auth.ldap.ldap_verify_cert }}"
  LDAP_GROUP_BASEDN: "{{ .Values.auth.ldap.ldap_group_basedn }}"
  LDAP_GROUP_FILTER: "{{ .Values.auth.ldap.ldap_group_filter }}"
  LDAP_GROUP_GID: "{{ .Values.auth.ldap.ldap_group_gid }}"
  LDAP_GROUP_SCOPE: "{{ .Values.auth.ldap.ldap_group_scope }}"
  SELF_REGISTRATION: "{{ .Values.auth.self_registration }}"
  PROJECT_CREATION_RESTRICTION: "{{ .Values.auth.project_creation_restriction }}"
  TOKEN_EXPIRATION: "30"
  EMAIL_HOST: "smtp.mydomain.com"
  EMAIL_FROM: "admin <sample_admin@mydomain.com>"
  EMAIL_PORT: "25"