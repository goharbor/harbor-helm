apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "harbor.fullname" . }}-jobservice"
  labels:
{{ include "harbor.labels" . | indent 4 }}
    component: jobservice
spec:
  replicas: {{ .Values.jobservice.replicas }}
  selector:
    matchLabels:
{{ include "harbor.matchLabels" . | indent 6 }}
      component: jobservice
  template:
    metadata:
      labels:
{{ include "harbor.labels" . | indent 8 }}
        component: jobservice
    spec:
      containers:
      - name: jobservice
        image: {{ .Values.jobservice.image.repository }}:{{ .Values.jobservice.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        resources:
{{ toYaml .Values.jobservice.resources | indent 10 }}
        env:
          - name: CORE_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "harbor.core" . }}
                key: secret
          - name: JOBSERVICE_SECRET
            valueFrom:
              secretKeyRef:
                name: "{{ template "harbor.fullname" . }}-jobservice"
                key: secret
          - name: ADMINSERVER_URL
            value: "http://{{ template "harbor.fullname" . }}-adminserver"
          - name: REGISTRY_CONTROLLER_URL
            value: "http://{{ template "harbor.fullname" . }}-registry:8080"
          - name: LOG_LEVEL
            value: debug
          - name: GODEBUG
            value: netdns=cgo
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: jobservice-config
          mountPath: /etc/jobservice/config.yml
          subPath: config.yml
        - name: job-logs
          mountPath: /var/log/jobs
          subPath: {{ .Values.jobservice.volumes.data.subPath }}
      volumes:
      - name: jobservice-config
        configMap:
          name: "{{ template "harbor.fullname" . }}-jobservice"
      - name: job-logs
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.jobservice.volumes.data.existingClaim | default (printf "%s-jobservice" (include "harbor.fullname" .)) }}  
        {{- else }}
        emptyDir: {}
        {{- end }}
    {{- with .Values.jobservice.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.jobservice.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.jobservice.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
